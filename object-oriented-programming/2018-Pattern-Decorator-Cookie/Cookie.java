// 1. 쿠키 만들기
/* Cookie Interface */
/*
 *  인터페이스 사용 목적
 *  
 *  인터페이스는 함수의 껍데기만 있다. 함수의 구현을 강제하기 위해서.
 *  구현을 강제함으로써 구현 객체의 같은 동작을 보장할 수 있다.
 *  자바에서는 다중 상속이 불가하고 인터페이스는 다중 인터페이스가 가능하다.
 *  
 *  인터페이스 특징
 *  1. 인터페이스를 상속받는 클래스에서는 반드시 인터페이스에 있는 메소드를 "다" 구현해야 한다.
 *  2. 인터페이스는 다중 상속이 가능하다. -> implements를 구현하는 부분에서 extends를 사용할 수 있다.
 *  3. "이러이러한 메소드를 쓸 것이다" 인터페이스에 선언을 해놓고, 가져다가 반드시 선언된 그대로 모두 구현해야 한다.
 *  4. 다형성 개념을 설명해준다.
 *     ex) interface: 동물 / method: 먹다, 자다, 걷다 / 구현체(implements): 고양이, 원숭이, 병아리
 *         
 *         -> 동물들은 모두 먹고 자고 걷는다. 하지만 동물들마다 각 행동에 차이가 있다.
 *         -> 구현체에서는 동물이 각각 먹고 자고 걷는 방식을 구현한다.
 *         -> 같은 '먹다'라는 동사에서 동물마다 여러가지 형태로 구현할 수 있기 때문에 이름이 다형성(Polymorphism)
 *         -> 각각의 구현체에 서로 영향을 주지 않는다.
 */
public interface Cookie {

	public String getName(); // 쿠키의 이름 가져오기
	
}